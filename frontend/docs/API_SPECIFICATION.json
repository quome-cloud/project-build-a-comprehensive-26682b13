```json
{
  "openapi": "3.0.0",
  "info": {
    "title": "Project Build A Comprehensive Emergency Management System",
    "version": "v1",
    "description": "A comprehensive emergency management system API for government agencies."
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Incident": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "format": "int64", "readOnly": true},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "location": {"type": "string"},
          "status": {"type": "string", "enum": ["open", "in progress", "closed"]}
        },
        "required": ["title", "description", "location", "status"]
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "format": "int64", "readOnly": true},
          "type": {"type": "string"},
          "status": {"type": "string", "enum": ["available", "deployed", "in transit"]}
        },
        "required": ["type", "status"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {"type": "integer", "format": "int32"},
          "message": {"type": "string"}
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {"type": "integer", "format": "int64"},
          "page": {"type": "integer", "format": "int32"},
          "limit": {"type": "integer", "format": "int32"}
        }
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/incidents": {
      "get": {
        "summary": "List incidents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {"type": "integer", "format": "int32"},
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {"type": "integer", "format": "int32"},
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of incidents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {"type": "array", "items": {"$ref": "#/components/schemas/Incident"}},
                    "pagination": {"$ref": "#/components/schemas/Pagination"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/ErrorResponse"}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create incident",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Incident"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Incident created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Incident"}
              }
            }
          },
          "400": {"$ref": "#/paths/~1incidents/get/responses/400"},
          "401": {"description": "Unauthorized"}
        }
      }
    },
    "/incidents/{id}": {
      "get": {
        "summary": "Get incident by ID",
        "parameters": [{"name": "id", "in": "path", "schema": {"type": "integer", "format": "int64"}, "required": true}],
        "responses": {
          "200": {
            "description": "Incident found",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Incident"}
              }
            }
          },
          "404": {"description": "Incident not found"}
        }
      },
      "put": {
        "summary": "Update incident",
        "security": [{"bearerAuth": []}],
        "parameters": [{"name": "id", "in": "path", "schema": {"type": "integer", "format": "int64"}, "required": true}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Incident"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Incident updated",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Incident"}
              }
            }
          },
          "400": {"$ref": "#/paths/~1incidents/get/responses/400"},
          "401": {"description": "Unauthorized"},
          "404": {"description": "Incident not found"}
        }
      },
      "delete": {
        "summary": "Delete incident",
        "security": [{"bearerAuth": []}],
        "parameters": [{"name": "id", "in": "path", "schema": {"type": "integer", "format": "int64"}, "required": true}],
        "responses": {
          "204": {"description": "Incident deleted"},
          "401": {"description": "Unauthorized"},
          "404": {"description": "Incident not found"}
        }
      }
    },
    "/resources": {
      "get": {
        "summary": "List resources",
        "parameters": [
          {"name": "page", "in": "query", "schema": {"type": "integer", "format": "int32"}, "description": "Page number"},
          {"name": "limit", "in": "query", "schema": {"type": "integer", "format": "int32"}, "description": "Items per page"}
        ],
        "responses": {
          "200": {
            "description": "List of resources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {"type": "array", "items": {"$ref": "#/components/schemas/Resource"}},
                    "pagination": {"$ref": "#/components/schemas/Pagination"}
                  }
                }
              }
            }
          },
          "400": {"$ref": "#/paths/~1incidents/get/responses/400"}
        }
      },
      "post": {
        "summary": "Create resource",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/Resource"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource created",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Resource"}
              }
            }
          },
          "400": {"$ref": "#/paths/~1incidents/get/responses/400"},
          "401": {"description": "Unauthorized"}
        }
      }
    }
    // ... other endpoints for authentication, search, etc.
  }
}
```
